$showProcesses = $false

$showConsole = 0
if ($showProcesses -eq $true){$showConsole = 1}

# Hide PowerShell Console
Add-Type -Name Window -Namespace Console -MemberDefinition '
[DllImport("Kernel32.dll")]
public static extern IntPtr GetConsoleWindow();
[DllImport("user32.dll")]
public static extern bool ShowWindow(IntPtr hWnd, Int32 nCmdShow);
'
$consolePtr = [Console.Window]::GetConsoleWindow()
$null = [Console.Window]::ShowWindow($consolePtr, $showConsole) 

#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 7f4abe24-a843-4d3f-8d3b-862bb762d164
# Source File: RockyDLTool.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
TwIAAB+LCAAAAAAABACFUl9rgzAcfC/0O0geB9ZqpS0szcMojsL+UUtfR9SfM2tMJMau7tMvGjta
trGXX3LJecedwVtI5RFUu6aakvHIcfCLku+QaiduRVooKdgnZCsUUV4D6g8jxjWoFbqZVLV/283S
Lpld/FPJ+03ez9pMe1IAryb6pFFvZKz2oGomBQkmPvbOYLgzLrBZk0Ue0gSC0KXLcOaG2Sx3l9ks
cZfzIEkW8yDz5yH2BvLw6ZBg11ZApti7hGdxyTNj53iXbvUABujcNYyb5FNEYk2VbqoujPX6i+nE
BVVdXTvVmLa2kIMCkULUiFSbcCu0EUd5APeey4TyV1MWInZfd839o/6LXlzID/eRMhFJVRq9HJEz
6v7AlaAFNuZ3LRY9K/bGBOUd4YmWQLYyPbTrh52U3OhUhou9H6TxCHtXD+gL8UT6cU8CAAA=#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2019 v5.6.160
     Generated on:       28.10.2022 23:56
     Generated by:       Rockschuppen
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2019
#>



#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
YQAAAB+LCAAAAAAABACzCUpNzi9LLap0SSxJVAAyijPz82yVjPUMlex4uRQUbPyLMtMz8xJz3DJz
Uv0Sc1PtgksSi0pKC/QKiott9DFkebls9JGNtAMAoyFkEGEAAAA=#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}


#endregion Source: Startup.pss

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	#Define release and paths
	$global:rls = "Spider-Man.No.Way.Home.2021.German.AC3.Dubbed.BDRip.x264-PsO"
	
     $global:root = ([IO.FileInfo] $MyInvocation.MyCommand.Path).Directory.Parent.FullName
	$global:base = ([IO.FileInfo] $MyInvocation.MyCommand.Path).Directory.Parent.Parent.FullName

	$global:dataPath = "$root\data"
     $global:functionsPath = "$root\functions"
	
	Get-ChildItem "$root" -Recurse | Unblock-File

	#Update EdgeDriver
     . "$functionsPath\Update-EdgeDriver.ps1"
	
	#Read passwords, encrypt if needed
	. "$functionsPath\Get-Passwords.ps1"
	
	$global:browserHidden = $true
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	function Reset-Tool
	{
		$topReleases = (Invoke-RestMethod -Uri "https://api.xrel.to/v2/release/browse_category.json?category_name=topmovie&ext_info_type=movie&per_page=100&page=1" | Select -expand list | Where { $_.video_type -eq "Web-Rip" -OR $_.video_type -eq "Blu-ray" } | Where { ($_.dirname -like "*2021*" -OR $_.dirname -like "*2022*" -OR $_.dirname -like "*2023*" -OR $_.dirname -like "*2024*") -AND ($_.dirname -like "*1080p*" -OR $_.dirname -like "*2160p*") }).dirname
		$listboxTopRls.Items.Clear()
		foreach ($release in $topReleases)
		{
			Update-ListBox -ListBox $listboxTopRls "$release" -Append
		}
		$progressbar1.value = 0
		
		$btn_Boerse.BackColor = 'ControlLightLight'
		$btn_DataLoad.BackColor = 'ControlLightLight'
		$btn_HDSource.BackColor = 'ControlLightLight'
		$btn_StarWarez.BackColor = 'ControlLightLight'
		$btn_DDLWarez.BackColor = 'ControlLightLight'
		$btn_MovieBlogArea.BackColor = 'ControlLightLight'
		$searchRls.Text = ""
	}
	
#endregion Source: Globals.ps1

#region Source: MainForm.psf
function Show-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
gwYAAB+LCAAAAAAABABlVcfK6+oOnQfyDpszNRz3Bv/d4N7i3j2zvziO47j3PP3J2Xdy4WokJCSh
srR+vBL0WzmdYr7kv77KXPfdf/7C/0b/+n29/Pr1Y091VXf5W67fpZW35W8zrzu5n9q/h/nxA/+f
+0/Qv/7fzORTqGGYygk4TrBFgfuv8Jx4bxf2Q7xS92AZGoFZniAAZLstxgETSf2i8nE9ADPCrclm
nkp6y/vPuylD+npZbxBEoWwSjkLMUYUrlDZP6DGUdCim5xgBLzgrffaMTWiozsSJ5mxvPPh1caSx
mQQCNg3BeDBxcieP62UG9WovHfYOCagiqlTEqPxN4E1wliKml0elz1xat/1E2h3mxBl7rLO+7VH1
3JKl7W45HVvTEkveWE7XS5Ny62wDeL4hHouSCfKw3LmKI4L7bLMAWaXqtMEe53lllr6psr60Rj2c
dntoumCIceAtN2fLe3Eni+vF1cV+f8+0/VJnitpq9HULvA8hT8k3T5bkrNHh9spBMtpv0SdrZvpt
3qhE4UiW18zHbMNZe8ew+8Kv1vUSjo5EJcg61KIC1rCzl8YfKurlDFCkvFjfjG0ebbdBV5mhFT4Z
VycY5N3oviMk0k/nUZlOIWfz4gDc9TKU2ctPI4Z4KoFtc4RsP2NWYzpO031sb+bhXtzWOnEeS7qB
NG0or5HaRFyLT3ES/oY1BdhJ1adi+LhdL8yWoFE8uLEO1ESE4qYq0Se5TxUJjtBWLfjENWtAMJKn
rYeFYIGOpvf2IXrFNuRQ3zzOJs3igJkih79edG3ue+L9LDBEQflUGJ3Zex7D04qSNejenryZYE+5
zd38mEKs2iY0yTgKc7FI6dDX51zE+uc8jTFjlesFlicDi2NYrEGrlCyKp9JGJTDElV7kjS7VnSaV
PQ6t4Sac9CwYWOQtv9lWDehxnAWMpxTSV8N/wTBeL+Y4PUdAdGKUS+en1UIkQEhVLWQ6w1a8SMdR
jPMoUj73+pStTm7bFlFOhdSa/IXsL1il9zt49HfX9c7rZWK7hFb2ldiJLyjSkyJRBk3ftyPjP51m
BWRaZlUPa5SIwhbFtcF369mMBQWVH/tyTFGeBV64K+TJIteL9CCpz/5eBa0GIdLWdmTrHW/XrE49
1NxwYGEVnZYSij1x76yTe17UprQVA5XPceYZ8ctdKZMULSos+l5IWCnFOOq6YWj92AfullsuA9nJ
DLLHKAnbCuHiq1JWLfHj4R0FdNqTiB599s6Lu9dBS7xltDjdZGNzvcSmM6ujXEZSvcj30NB9J3QZ
ykU9FnLEJVXJ/XgRoYpG9RJZ5haAQXULlEDkQY9YqHSCKjm7aeRV/PtDMGCtSDXj3RPvxSFEnDRJ
9bPFI2GQIIoowSij1Ticsi5t6lu0nrkBJGTSnp7zLWZCB1tACHYwopl/vp1SZwCccOkKIw6RSWzL
l4joCOMPzJYzgPbb1dNOn5QWDO+qu/d2KoaggI+EqKijxX25Mw+RSr/3F38/EvDZMfJ16oSY0qgY
1HpxAWUikFyEzp184WSkPzdn7QWt3LAo12ERUwoU68umP19gQhEPUb33Ijxk3L9e0lRnTsN48bfW
gYsnY5fykwx5Z5C5wcxYSBBqBUJdckpoScdHLrsNok7NYWkRfrSVJsuk3dn7aNOaX2TNVHxaUT/t
/uzbWcrgTif2eEyg39EXlFMm+BdjSFXoO8f9wH9I4A8dcPNctsW7Ludf8NfyA/8v6fz+B2DrjXeD
BgAA#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formRockysULtimateDLFind = New-Object 'System.Windows.Forms.Form'
	$btn_Search = New-Object 'System.Windows.Forms.Button'
	$rb_NoHD = New-Object 'System.Windows.Forms.RadioButton'
	$rb_HD = New-Object 'System.Windows.Forms.RadioButton'
	$btn_Reset = New-Object 'System.Windows.Forms.Button'
	$btn_Go = New-Object 'System.Windows.Forms.Button'
	$btn_MovieBlogArea = New-Object 'System.Windows.Forms.Button'
	$btn_DDLWarez = New-Object 'System.Windows.Forms.Button'
	$btn_StarWarez = New-Object 'System.Windows.Forms.Button'
	$btn_HDSource = New-Object 'System.Windows.Forms.Button'
	$btn_DataLoad = New-Object 'System.Windows.Forms.Button'
	$btn_Boerse = New-Object 'System.Windows.Forms.Button'
	$searchRls = New-Object 'System.Windows.Forms.TextBox'
	$progressbar1 = New-Object 'System.Windows.Forms.ProgressBar'
	$listboxTopRls = New-Object 'System.Windows.Forms.ListBox'
	$tooltip1 = New-Object System.Windows.Forms.ToolTip
	$tooltip1.AutoPopDelay = 4500
	$tooltip1.InitialDelay = 1000
	$tooltip1.ReshowDelay = 500
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formRockysULtimateDLFind_Load={
		#TODO: Initialize Form Controls here
		$rb_HD.Checked = $true
		Reset-Tool
	}
	
	#region Control Helper Functions
	function Update-ComboBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
		
		.PARAMETER ComboBox
			The ComboBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ComboBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
			
		.PARAMETER ValueMember
			Indicates the property to use for the value of the control.
		
		.PARAMETER Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red" -Append
			Update-ComboBox $combobox1 "White" -Append
			Update-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Update-ComboBox $combobox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ComboBox]
			$ComboBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[Parameter(Mandatory = $false)]
			[string]$ValueMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$ComboBox.Items.Clear()
		}
		
		if ($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ComboBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$ComboBox.Items.Add($obj)
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)
		}
		
		$ComboBox.DisplayMember = $DisplayMember
		$ComboBox.ValueMember = $ValueMember
	}
	
	function Update-ListBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
		
		.PARAMETER ListBox
			The ListBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ListBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
			
		.PARAMETER ValueMember
			Indicates the property to use for the value of the control.
		
		.PARAMETER Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ListBox $listBox1 "Red" -Append
			Update-ListBox $listBox1 "White" -Append
			Update-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Update-ListBox $listBox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ListBox]
			$ListBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[Parameter(Mandatory = $false)]
			[string]$ValueMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$ListBox.Items.Clear()
		}
		
		if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
		{
			$ListBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ListBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$ListBox.Items.Add($obj)
			}
			$ListBox.EndUpdate()
		}
		else
		{
			$ListBox.Items.Add($Items)
		}
		
		$ListBox.DisplayMember = $DisplayMember
		$ListBox.ValueMember = $ValueMember
	}
	#endregion
	
	$btn_Boerse_Click={
		#TODO: Place custom script here
		Start-Process "$boerseLink"
	}
	
	$btn_DataLoad_Click={
		#TODO: Place custom script here
		Start-Process "$dataLoadLink"
	}
	
	$btn_HDSource_Click={
		#TODO: Place custom script here
		Start-Process "$hdSourceLink"
	}
	
	$btn_StarWarez_Click={
		#TODO: Place custom script here
		Start-Process "$starWarezLink"
	}
	
	$btn_DDLWarez_Click={
		#TODO: Place custom script here
		Start-Process "$ddlWarezLink"
	}
	
	$btn_MovieBlogArea_Click={
		#TODO: Place custom script here
		Start-Process "$movieBlogAreaLink"
	}
	
	$btn_Go_Click={
		#TODO: Place custom script here

		$global:boerseLink = $null
		$global:dataLoadLink = $null
		$global:hdSourceLink = $null
		$global:starWarezLink = $null
		$global:ddlWarezLink = $null
		$global:movieBlogAreaLink = $null

		$rls = $listboxTopRls.Text
		
		$btn_Boerse.BackColor = 'ControlLightLight'
		$btn_DataLoad.BackColor = 'ControlLightLight'
		$btn_HDSource.BackColor = 'ControlLightLight'
		$btn_StarWarez.BackColor = 'ControlLightLight'
		$btn_DDLWarez.BackColor = 'ControlLightLight'
		$btn_MovieBlogArea.BackColor = 'ControlLightLight'
		
		$progressbar1.Value = 0
		1 .. 15 | foreach{
			Start-Sleep -Milliseconds 100
			$progressbar1.Value++
		}
		
		. "$functionsPath\Search-Boerse.ps1"
		if ($boerseLink -ne $null)
		{
			$btn_Boerse.BackColor = '0, 192, 0'
		}
		$progressbar1.Value = 17
		
		. "$functionsPath\Search-DataLoad.ps1"
		if ($dataLoadLink -ne $null)
		{
			$btn_DataLoad.BackColor = '0, 192, 0'
		}
		$progressbar1.Value = 34
		
		. "$functionsPath\Search-HDSource.ps1"
		if ($hdSourceLink -ne $null)
		{
			$btn_HDSource.BackColor = '0, 192, 0'
		}
		$progressbar1.Value = 51
		
		. "$functionsPath\Search-StarWarez.ps1"
		if ($starWarezLink -ne $null)
		{
			$btn_StarWarez.BackColor = '0, 192, 0'
		}
		$progressbar1.Value = 68
		
		. "$functionsPath\Search-DDLWarez.ps1"
		if ($ddlWarezLink -ne $null)
		{
			$btn_DDLWarez.BackColor = '0, 192, 0'
		}
		$progressbar1.Value = 85
		
		. "$functionsPath\Search-MovieBlogArea.ps1"
		if ($movieBlogAreaLink -ne $null)
		{
			$btn_MovieBlogArea.BackColor = '0, 192, 0'
		}
		$progressbar1.Value = 100
	}
	
	$progressbar1_Click={
		#TODO: Place custom script here
		
	}
	
	$btn_Reset_Click={
		#TODO: Place custom script here
		Reset-Tool
	}
	
	$btn_Search_Click={
		#TODO: Place custom script here
		$listboxTopRls.Items.Clear()
		$search = $searchRls.Text
		if ($rb_HD.Checked -eq $true)
		{
			$searchReleases = ((Invoke-RestMethod -Uri "https://api.xrel.to/v2/search/releases.json?q=$search").results | Where{ ($_.video_type -eq "Web-Rip" -OR $_.video_type -eq "Blu-ray") -AND ($_.dirname -like "*2160p*" -OR $_.dirname -like "*1080p*") }).dirname
		}
		if ($rb_NoHD.Checked -eq $true)
		{
			$searchReleases = ((Invoke-RestMethod -Uri "https://api.xrel.to/v2/search/releases.json?q=$search").results | Where{ ($_.video_type -eq "Web-Rip" -OR $_.video_type -eq "Blu-ray") -AND ($_.dirname -notlike "*2160p*" -AND $_.dirname -notlike "*1080p*") }).dirname
		}
		
		foreach ($searchRelease in $searchReleases)
		{
			Update-ListBox -ListBox $listboxTopRls "$searchRelease" -Append
		}
	}
	
	$listboxTopRls.add_DoubleClick({
			$listboxElement = $listboxTopRls.Text
			$listboxElement
			$xRelLink = (Invoke-RestMethod -Uri "https://api.xrel.to/v2/search/releases.json?q=$listboxElement").results.link_href
			Start-Process "$xRelLink"
	})

	$listboxTopRls.add_MouseHover({

	    $point = $listboxTopRls.PointToClient([System.Windows.Forms.Control]::MousePosition)

	    $index = $listboxTopRls.IndexFromPoint($point)

 	   if($index -ge 0) {
	        $tooltip1.SetToolTip($listboxTopRls, 	$listboxTopRls.GetItemText($listboxTopRls.Items[$index]))
	    }
	})
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formRockysULtimateDLFind.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_rb_NoHD = $rb_NoHD.Checked
		$script:MainForm_rb_HD = $rb_HD.Checked
		$script:MainForm_searchRls = $searchRls.Text
		$script:MainForm_listboxTopRls = $listboxTopRls.SelectedItems
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$btn_Search.remove_Click($btn_Search_Click)
			$btn_Reset.remove_Click($btn_Reset_Click)
			$btn_Go.remove_Click($btn_Go_Click)
			$btn_MovieBlogArea.remove_Click($btn_MovieBlogArea_Click)
			$btn_DDLWarez.remove_Click($btn_DDLWarez_Click)
			$btn_StarWarez.remove_Click($btn_StarWarez_Click)
			$btn_HDSource.remove_Click($btn_HDSource_Click)
			$btn_DataLoad.remove_Click($btn_DataLoad_Click)
			$btn_Boerse.remove_Click($btn_Boerse_Click)
			$progressbar1.remove_Click($progressbar1_Click)
			$formRockysULtimateDLFind.remove_Load($formRockysULtimateDLFind_Load)
			$formRockysULtimateDLFind.remove_Load($Form_StateCorrection_Load)
			$formRockysULtimateDLFind.remove_Closing($Form_StoreValues_Closing)
			$formRockysULtimateDLFind.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formRockysULtimateDLFind.SuspendLayout()
	#
	# formRockysULtimateDLFind
	#
	$formRockysULtimateDLFind.Controls.Add($btn_Search)
	$formRockysULtimateDLFind.Controls.Add($rb_NoHD)
	$formRockysULtimateDLFind.Controls.Add($rb_HD)
	$formRockysULtimateDLFind.Controls.Add($btn_Reset)
	$formRockysULtimateDLFind.Controls.Add($btn_Go)
	$formRockysULtimateDLFind.Controls.Add($btn_MovieBlogArea)
	$formRockysULtimateDLFind.Controls.Add($btn_DDLWarez)
	$formRockysULtimateDLFind.Controls.Add($btn_StarWarez)
	$formRockysULtimateDLFind.Controls.Add($btn_HDSource)
	$formRockysULtimateDLFind.Controls.Add($btn_DataLoad)
	$formRockysULtimateDLFind.Controls.Add($btn_Boerse)
	$formRockysULtimateDLFind.Controls.Add($searchRls)
	$formRockysULtimateDLFind.Controls.Add($progressbar1)
	$formRockysULtimateDLFind.Controls.Add($listboxTopRls)
	$formRockysULtimateDLFind.AutoScaleDimensions = '8, 17'
	$formRockysULtimateDLFind.AutoScaleMode = 'Font'
	$formRockysULtimateDLFind.BackColor = 'ControlLightLight'
	$formRockysULtimateDLFind.ClientSize = '797, 600'
	$formRockysULtimateDLFind.FormBorderStyle = 'FixedDialog'
	$formRockysULtimateDLFind.Margin = '5, 5, 5, 5'
	$formRockysULtimateDLFind.MaximizeBox = $False
	$formRockysULtimateDLFind.MinimizeBox = $False
	$formRockysULtimateDLFind.Name = 'formRockysULtimateDLFind'
	$formRockysULtimateDLFind.StartPosition = 'CenterScreen'
	$formRockysULtimateDLFind.Text = 'Rockys Ultimate DL Finder Tool'
	$formRockysULtimateDLFind.add_Load($formRockysULtimateDLFind_Load)
	#
	# btn_Search
	#
	$btn_Search.Location = '612, 378'
	$btn_Search.Margin = '4, 4, 4, 4'
	$btn_Search.Name = 'btn_Search'
	$btn_Search.Size = '148, 30'
	$btn_Search.TabIndex = 2
	$btn_Search.Text = 'Search'
	$btn_Search.UseCompatibleTextRendering = $True
	$btn_Search.UseVisualStyleBackColor = $True
	$btn_Search.add_Click($btn_Search_Click)
	#
	# rb_NoHD
	#
	$rb_NoHD.Location = '465, 394'
	$rb_NoHD.Margin = '4, 4, 4, 4'
	$rb_NoHD.Name = 'rb_NoHD'
	$rb_NoHD.Size = '139, 31'
	$rb_NoHD.TabIndex = 22
	$rb_NoHD.Text = 'any other'
	$rb_NoHD.UseCompatibleTextRendering = $True
	$rb_NoHD.UseVisualStyleBackColor = $True
	#
	# rb_HD
	#
	$rb_HD.Location = '465, 366'
	$rb_HD.Margin = '4, 4, 4, 4'
	$rb_HD.Name = 'rb_HD'
	$rb_HD.Size = '185, 31'
	$rb_HD.TabIndex = 100
	$rb_HD.Text = '2160p / 1080p'
	$rb_HD.UseCompatibleTextRendering = $True
	$rb_HD.UseVisualStyleBackColor = $True
	#
	# btn_Reset
	#
	$btn_Reset.Location = '612, 285'
	$btn_Reset.Margin = '4, 4, 4, 4'
	$btn_Reset.Name = 'btn_Reset'
	$btn_Reset.Size = '148, 30'
	$btn_Reset.TabIndex = 20
	$btn_Reset.Text = 'Reset Search'
	$btn_Reset.UseCompatibleTextRendering = $True
	$btn_Reset.UseVisualStyleBackColor = $True
	$btn_Reset.add_Click($btn_Reset_Click)
	#
	# btn_Go
	#
	$btn_Go.Location = '629, 544'
	$btn_Go.Margin = '4, 4, 4, 4'
	$btn_Go.Name = 'btn_Go'
	$btn_Go.Size = '133, 30'
	$btn_Go.TabIndex = 4
	$btn_Go.Text = '&Go for that shit'
	$btn_Go.UseCompatibleTextRendering = $True
	$btn_Go.UseVisualStyleBackColor = $True
	$btn_Go.add_Click($btn_Go_Click)
	#
	# btn_MovieBlogArea
	#
	$btn_MovieBlogArea.Location = '690, 207'
	$btn_MovieBlogArea.Margin = '4, 4, 4, 4'
	$btn_MovieBlogArea.Name = 'btn_MovieBlogArea'
	$btn_MovieBlogArea.Size = '70, 70'
	$btn_MovieBlogArea.TabIndex = 16
	$btn_MovieBlogArea.Text = 'Movie Blog Area'
	$btn_MovieBlogArea.UseCompatibleTextRendering = $True
	$btn_MovieBlogArea.UseVisualStyleBackColor = $True
	$btn_MovieBlogArea.add_Click($btn_MovieBlogArea_Click)
	#
	# btn_DDLWarez
	#
	$btn_DDLWarez.Location = '612, 207'
	$btn_DDLWarez.Margin = '4, 4, 4, 4'
	$btn_DDLWarez.Name = 'btn_DDLWarez'
	$btn_DDLWarez.Size = '70, 70'
	$btn_DDLWarez.TabIndex = 14
	$btn_DDLWarez.Text = 'DDL-Warez'
	$btn_DDLWarez.UseCompatibleTextRendering = $True
	$btn_DDLWarez.UseVisualStyleBackColor = $True
	$btn_DDLWarez.add_Click($btn_DDLWarez_Click)
	#
	# btn_StarWarez
	#
	$btn_StarWarez.Location = '690, 129'
	$btn_StarWarez.Margin = '4, 4, 4, 4'
	$btn_StarWarez.Name = 'btn_StarWarez'
	$btn_StarWarez.Size = '70, 70'
	$btn_StarWarez.TabIndex = 12
	$btn_StarWarez.Text = 'Star Warez'
	$btn_StarWarez.UseCompatibleTextRendering = $True
	$btn_StarWarez.UseVisualStyleBackColor = $True
	$btn_StarWarez.add_Click($btn_StarWarez_Click)
	#
	# btn_HDSource
	#
	$btn_HDSource.BackColor = 'ControlLightLight'
	$btn_HDSource.Location = '612, 129'
	$btn_HDSource.Margin = '4, 4, 4, 4'
	$btn_HDSource.Name = 'btn_HDSource'
	$btn_HDSource.Size = '70, 70'
	$btn_HDSource.TabIndex = 10
	$btn_HDSource.Text = 'HD-Source'
	$btn_HDSource.UseCompatibleTextRendering = $True
	$btn_HDSource.UseVisualStyleBackColor = $False
	$btn_HDSource.add_Click($btn_HDSource_Click)
	#
	# btn_DataLoad
	#
	$btn_DataLoad.Location = '690, 51'
	$btn_DataLoad.Margin = '4, 4, 4, 4'
	$btn_DataLoad.Name = 'btn_DataLoad'
	$btn_DataLoad.Size = '70, 70'
	$btn_DataLoad.TabIndex = 8
	$btn_DataLoad.Text = 'Data-Load'
	$btn_DataLoad.UseCompatibleTextRendering = $True
	$btn_DataLoad.UseVisualStyleBackColor = $True
	$btn_DataLoad.add_Click($btn_DataLoad_Click)
	#
	# btn_Boerse
	#
	$btn_Boerse.BackColor = 'ControlLightLight'
	$btn_Boerse.Location = '612, 51'
	$btn_Boerse.Margin = '4, 4, 4, 4'
	$btn_Boerse.Name = 'btn_Boerse'
	$btn_Boerse.Size = '70, 70'
	$btn_Boerse.TabIndex = 6
	$btn_Boerse.Text = 'Boerse'
	$btn_Boerse.UseCompatibleTextRendering = $True
	$btn_Boerse.UseVisualStyleBackColor = $False
	$btn_Boerse.add_Click($btn_Boerse_Click)
	#
	# searchRls
	#
	$searchRls.AccessibleName = ''
	$searchRls.Location = '41, 385'
	$searchRls.Margin = '4, 4, 4, 4'
	$searchRls.Name = 'searchRls'
	$searchRls.Size = '387, 23'
	$searchRls.TabIndex = 0
	#
	# progressbar1
	#
	$progressbar1.Location = '41, 460'
	$progressbar1.Margin = '4, 4, 4, 4'
	$progressbar1.Name = 'progressbar1'
	$progressbar1.Size = '721, 30'
	$progressbar1.TabIndex = 100
	$progressbar1.add_Click($progressbar1_Click)
	#
	# listboxTopRls
	#
	$listboxTopRls.FormattingEnabled = $True
	$listboxTopRls.ItemHeight = 17
	$listboxTopRls.Location = '41, 51'
	$listboxTopRls.Margin = '4, 4, 4, 4'
	$listboxTopRls.Name = 'listboxTopRls'
	$listboxTopRls.Size = '529, 259'
	$listboxTopRls.TabIndex = 40
	$listboxTopRls.TabStop = $False
	$formRockysULtimateDLFind.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formRockysULtimateDLFind.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formRockysULtimateDLFind.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formRockysULtimateDLFind.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$formRockysULtimateDLFind.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $formRockysULtimateDLFind.ShowDialog()

}
#endregion Source: MainForm.psf

#Start the application
Main ($CommandLine)
